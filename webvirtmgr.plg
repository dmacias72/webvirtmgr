<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "webvirtmgr">
<!ENTITY author    "dmacias">
<!ENTITY version   "2014.09.05h">
<!ENTITY category  "VM Support">
<!ENTITY pluginURL "https://github.com/dmacias72/webvirtmgr_unRAID_6/raw/master/webvirtmgr.plg">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         category="&category;"
         pluginURL="&pluginURL;">

<!--
This Plugin installs WebVirtMgr unRaid 6.0 ONLY. All dependencies are installed as needed and everything is controlable from the webgui.

Credits:
Troy Wagner: Heavily updated this plugin originally created / modified by Tim Alexander.
	This now contains more options and some validity to information added as to not break the app with invalid options.
	When invalid options are found, default values are loaded in its place.
	Spaces will be replaced with _ as passing anythign with a space breaks these plugins.
	Empty values which also break plugins, are replaced with default values also.
Infuencer
Benni-Chan: Much of the plug-in structure from his original plug-ins. Much of that code is still in place.
Anatoliy Guskov aka retspen: for creating webvirtmgr https://github.com/retspen/webvirtmgr
Rafi Khardalian: adding local socket support to webvirtmgr and help
Peter: compiling libvirt packages, help and testing
-->


<FILE Name="/tmp/plugin-prepare" Run="/bin/bash">
<INLINE>
# Wait until network is ready
timer=30
while [ $timer -gt 0 ]; do
	gateway=$(route -n | awk '/^0.0.0.0/ {print $2}')
	if [ -n "$gateway" ] &amp;&amp; [ $(ping -q -n -c 1 $gateway | awk -F, '/received/ {print $2}' | awk '{print $1}') -eq 1 ]; then
		break
	fi
	timer=$((timer-1))
	sleep 1
done
if [ $timer -eq 0 ]; then
	echo "No network communication !!!"
fi
# Remove this script
rm -f /tmp/plugin-prepare
</INLINE>
</FILE>

<FILE Name="/boot/packages/libvirt-python-1.2.8-x86_64-1_SBo.tgz" Run="upgradepkg --install-new">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/libvirt-python-1.2.8-x86_64-1_SBo.tgz</URL>
</FILE>

<FILE Name="/boot/packages/pip-1.5.6-x86_64-1_uqv.txz" Run="upgradepkg --install-new">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/pip-1.5.6-x86_64-1_uqv.txz</URL>
</FILE>

<FILE Name="/boot/packages/pysetuptools-3.6-x86_64-1ponce.txz" Run="upgradepkg --install-new">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/pysetuptools-3.6-x86_64-1ponce.txz</URL>
<MD5>8ff5271f08e258ce46e8e96bebec66aa</MD5>
</FILE>

<FILE Name="/boot/packages/git-1.8.4-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/git-1.8.4-x86_64-1.txz</URL>
<MD5>e24d44ec30e7afc16c5509c4d9446140</MD5>
</FILE>

<FILE Name="/boot/config/plugins/webvirtmgr.plg">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/webvirtmgr.plg</URL>
</FILE>

<FILE Name="/boot/config/plugins/&name;/requirements.txt">
<URL>https://raw.githubusercontent.com/retspen/webvirtmgr/master/requirements.txt</URL>
</FILE>

<FILE Name="/boot/config/plugins/&name;/webvirtmgr.png">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/webvirtmgr.png</URL>
</FILE>
<FILE Name="/boot/config/plugins/images/device_status.png">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/device_status.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/images/new_config.png">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/new_config.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/images/information.png">
<URL>https://raw.githubusercontent.com/dmacias72/webvirtmgr_unRAID_6/master/information.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/&name;/webvirtmgr.cfg">
<INLINE>
<![CDATA[
# webvirtmgr configuration:
SERVICE="disable"
INSTALLDIR="/usr/local/webvirtmgr"
PORT="8000"
RUNAS="nobody"
USERNAME="username"
PASSWORD="password"
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/hp-chkconf" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/sh
# This will check each entry in the config so nothing is missing, and if missing, sets to default
CFGFILE=/boot/config/plugins/webvirtmgr/webvirtmgr.cfg
[ ! `cat "$CFGFILE" | grep SERVICE` ] && echo "SERVICE=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep INSTALLDIR` ] && echo "INSTALLDIR=\"/usr/local/webvirtmgr\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep ^PORT` ] && echo "PORT=\"8000\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep RUNAS` ] && echo "RUNAS=\"nobody\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep USERNAME` ] && echo "USERNAME=\"yes\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep PASSWORD` ] && echo "PASSWORD=\"yes\"" >> "$CFGFILE"
rm /tmp/hp-chkconf
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.webvirtmgr" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# start|stop|restart|enable|disable|install|createsuperuser|update|storagesize|datacheck|currentversion webvirtmgr.

webvirtmgr_start()
{
	# no-op if not enabled
	if [ "$SERVICE" != "enable" ]; then
		sed -i 's/disable/enable/' "$CONFIG"
	fi

	# no-op if already running
	PIDS=$(pgrep -f manage.py)
	if [ "$PIDS" != "" ]; then
		echo "webvirtmgr already running."
		return
	fi

	# if directory doesn't exist or py is not found, install it
	if [[ "$INSTALLDIR" != "" &&  ! -e "$INSTALLDIR/manage.py" ]]; then
		webvirtmgr_install
	fi

	echo "Starting Web Virtual Manager"
	sleep 1
	sudo -H -u "$RUNAS" /bin/bash -c "nohup /usr/bin/python $INSTALLDIR/manage.py runserver 0:$PORT > /dev/null 2>&1 &"	

	# Checks if the app started properly or not, giving it 10 seconds to create the PID file
	TIMER=0
	STARTFAIL="0"
	sleep 2
	while [ "$PIDS" = "" ]; do
		let TIMER=$TIMER+1
		sleep 1
		PIDS=$(pgrep -f manage.py)
		if [ $TIMER -gt 10 ]; then
			echo "Application did not start for some reason"
			sleep 1
			STARTFAIL="1"
			break
		fi
	done

	# Notify if start was successful or failed
	if [ "$STARTFAIL" == "0" ]; then
		echo "... Start OK"
	else
		echo "... Start Failed"
	fi
	sleep 1
}

webvirtmgr_stop()
{
	PIDS=$(pgrep -f manage.py)
	echo "Stopping Web Virtual Manager..."
	sleep 1

	# Send the kill command to gracefully shutdown
	pkill -f manage.py 2> /dev/null

	# Begin a timer for shutdown, force kill process if not shut down by end of timer
	TIMER=0
	while [ "$PIDS" != "" ]; do
		let TIMER=$TIMER+1
		sleep 1
		PIDS=$(pgrep -f manage.py)
		if [ $TIMER -gt 10 ]; then
			echo "Application has not shut down yet, killing the process"
			sleep 1
			pkill -9 -f manage.py 2> /dev/null
			break
		fi
	done

	echo "... Stop OK"
	sleep 1
}

webvirtmgr_restart()
{
	webvirtmgr_stop
	sleep 1
	webvirtmgr_start
}

webvirtmgr_buttonstart()
{
	CONFIG="/boot/config/plugins/webvirtmgr/webvirtmgr.cfg"
	if [[ "CONFIG" ]]; then
		webvirtmgr_start
	else
		echo "No config file found. Press reinstall the plugin."
		sleep 3
	fi
}

webvirtmgr_update()
{
	RUNSTATUS="$1"
	webvirtmgr_stop
	sleep 1
	webvirtmgr_install
	sleep 1
	if [ "$RUNSTATUS" == "Running" ]; then
		webvirtmgr_start
	fi
}

write_config()
{
	sleep 1
	# Write to the config file
	echo "# WebVirtMgr configuration:" > /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	echo "PORT=\"$PORT\"" >> /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	echo "RUNAS=\"$RUNAS\"" >> /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	echo "USERNAME=\"$USERNAME\"" >> /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	echo "PASSWORD=\"$PASSWORD\"" >> /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
	sleep 1
}


webvirtmgr_change_settings()
{
	INSTALLDIR="$1"

	PORT="$2"

	RUNAS="$3"

	# create webvirtmgr user if necessary
	if [[ "$RUNAS" != "nobody" && "$RUNAS" != "root" ]]; then
		if ( ! grep -q ^$RUNAS /etc/passwd ); then
			useradd -r -g users -d / -s /bin/false "$RUNAS" &> /dev/null
			cp /etc/passwd /etc/shadow /boot/config
		fi
	fi

	if [ -d "$INSTALLDIR" ]; then
		OWNER=$(stat -c %U "$INSTALLDIR")
		if [ "$OWNER" != "$RUNAS" ]; then
			chown -R "$RUNAS":users "$INSTALLDIR"
		fi
	fi

	USERNAME="$4"
	PASSWORD="$5"

}

webvirtmgr_enable()
{
	webvirtmgr_stop
	SERVICE=enable
	webvirtmgr_change_settings $1 $2 $3 $4 $5 
	write_config
	webvirtmgr_start
}

webvirtmgr_disable()
{
	webvirtmgr_stop
	SERVICE=disable
	webvirtmgr_change_settings $1 $2 $3 $4 $5
	write_config
}

webvirtmgr_install()
{
	echo "Installing latest version of webvirtmgr from master..."

	if [ ! -d "$INSTALLDIR" ]; then 
		mkdir -p "$INSTALLDIR"
		if [ ! -d "$INSTALLDIR" ]; then 
			echo "Unable to create directory $INSTALLDIR, aborting installation"
			exit 1
		fi
	fi


	# Clone from GIT to a temp folder, then move to final install dir
	cd /tmp
	git clone -b master https://github.com/retspen/webvirtmgr webvirtmgr
	cd /
	cp -af /tmp/webvirtmgr/. "$INSTALLDIR"
	rm -Rf /tmp/webvirtmgr
	cp -f $INSTALLDIR/webvirtmgr/local/local_settings.py.example $INSTALLDIR/webvirtmgr/local/local_settings.py
	/usr/bin/python $INSTALLDIR/manage.py syncdb --noinput
	/usr/bin/python $INSTALLDIR/manage.py collectstatic --noinput

	webvirtmgr_createsuperuser

	OWNER=$(stat -c %U "$INSTALLDIR")
	if [ "$OWNER" != "$RUNAS" ]; then
		chown -R "$RUNAS":users "$INSTALLDIR"
	fi

	# Check for installed files after extract. Display ok if successful or failed if not successful
	if [ -f "$INSTALLDIR/manage.py" ]; then
		echo "... Install OK"
	else
		echo "... Not Installed"
	fi
	sleep 1
}

webvirtmgr_createsuperuser()
{
	echo "Creating Username and Password..."
	expect <<- DONE
	  set timeout -1

	  spawn  $INSTALLDIR/manage.py createsuperuser --username $USERNAME --email none > /dev/null 2>&1 &
	  match_max 100000

	  expect "Password:"
	  send -- "$PASSWORD\r"
	  expect "Password (again):"
	  send -- "$PASSWORD\r"
	  send -- "\r"
	  expect eof
	DONE

}

webvirtmgr_curver()
{
	# This gets the current version installed
	cd "$INSTALLDIR"
	
	CURVER=`git rev-list --tags -n 1`	
	CURTAG=`git name-rev $CURVER --tags --name-only`	
	cd /

	echo "$CURTAG"
}

webvirtmgr_storagesize() 
{
	# Get size of Install directory
	if [ -d "$INSTALLDIR" ]; then
		INSTSIZE=`du -shm "$INSTALLDIR" | cut -f1 | sed 's/[^0-9]*//g'`
	elif [ -f "$INSTALLDIR" ]; then
		INSTSIZE=`ls -lah --block-size=M "$INSTALLDIR" | awk '{ print $5}'`
	else
		INSTSIZE=0
	fi


	TOTALSIZE="$INSTSIZE"

	# Create the HTML response - Add insatall directory
	LINE="<p style="margin-left:10px\;margin-bottom:0px\;"><b>Total Storage Usage: $TOTALSIZE MB</b>"
	LINE="$LINE<ul style="margin-top:0px\;"><li>Install Directory: $INSTSIZE MB</li>"
	LINE="$LINE</ul></p>"
	echo "$LINE"
}

webvirtmgr_datacheck() 
{
	if [ -e "$INSTALLDIR" ]; then
		fs=$( stat -f -c '%T' "$INSTALLDIR" )
		if [ "$fs" == "ramfs" ] || [ "$fs" == "tmpfs" ] || [ "$fs" == "proc" ] || [ "$fs" == "sysfs" ]; then
			echo "<p style="color:red\;margin-left:10px\;margin-right:10px\;"><b>WARNING:</b> Your config directory is not persistent and WILL NOT survive a reboot. Please locate the directory on disk for persistency</p>"
		elif [ "$fs" == "msdos" ]; then
			echo "<p style="color:orange\;margin-left:10px\;margin-right:10px\;"><b>WARNING:</b> Your config directory is located on your flash drive. This will decrease your flash drives life span!</p>"
		else
			echo "<p style="color:green\;margin-left:10px\;margin-right:10px\;">Your config data will persist after a reboot</p>"
		fi
	else
		echo "<p style="color:red\;margin-left:10px\;margin-right:10px\;"><b>WARNING:</b> Your config directory does not exist. You likely need to run the program once to create it.</p>"
	fi
}


# read our configuration
source /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
CONFIG="/boot/config/plugins/webvirtmgr/webvirtmgr.cfg"

case "$1" in
	'start')
		webvirtmgr_start
	;;
	'stop')
		webvirtmgr_stop
	;;
	'restart')
		webvirtmgr_restart
	;;
	'enable')
		webvirtmgr_enable $2 $3 $4 $5 $6 
	;;
	'disable')
		webvirtmgr_disable $2 $3 $4 $5 $6 
	;;
	'install')
		webvirtmgr_install
	;;
	'createsuperuser')
		webvirtmgr_createsuperuser
	;;
	'update')
		webvirtmgr_update $2
	;;
	'storagesize')
		webvirtmgr_storagesize
	;;
	'datacheck')
		webvirtmgr_datacheck
	;;
	'buttonstart')
		webvirtmgr_buttonstart
	;;
	'currentversion')
		webvirtmgr_curver
	;;
	*)
	echo "usage $0 start|stop|restart|enable|disable|install|createsuperuser|update|storagesize|datacheck|currentversion"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/webvirtmgr.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="webvirtmgr.png"
Author="Derek Macias"
Type="php"
Title="VM Manager"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/webvirtmgr.png">
<LOCAL>/boot/config/plugins/&name;/webvirtmgr.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/device_status.png">
<LOCAL>/boot/config/plugins/images/device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/new_config.png">
<LOCAL>/boot/config/plugins/images/new_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/information.png">
<LOCAL>/boot/config/plugins/images/information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/webvirtmgr.css">
<INLINE>
<![CDATA[
<style type="text/css">
#updatebutton {
border-collapse: separate;
	-moz-box-shadow:inset 0px 1px 0px 0px #dcecfb;
	-webkit-box-shadow:inset 0px 1px 0px 0px #dcecfb;
	box-shadow:inset 0px 1px 0px 0px #dcecfb;
	background-color:#bddbfa;
	background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#bddbfa), to(#80b5ea));
	background-image: -moz-linear-gradient(#bddbfa, #80b5ea);
	background-image: -o-linear-gradient(#bddbfa, #80b5ea);
	background-image: linear-gradient(#bddbfa, #80b5ea);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#bddbfa', endColorstr='#80b5ea');
	ms-filter: "progid:DXImageTransform.Microsoft.Gradient(GradientType=0,StartColorStr=#bddbfa,EndColorStr=#80b5ea)";
	text-indent:0;
	border:1px solid #84bbf3;
	display:inline-block;
	color:#ffffff;
	font-family:Arial;
	font-size:15px;
	font-weight:bold;
	font-style:normal;
	text-align:center;
	text-shadow:1px 1px 0px #528ecc;
	-webkit-transition: all 300ms ease-in;
	-moz-transition: all 300ms ease-in;
	-o-transition: all 300ms ease-in;
	-ms-transition: all 300ms ease-in;
	transition: all 300ms ease-in;
}
#updatebutton:hover {
	border:1px solid #4fa1f4;
	-moz-box-shadow:inset 0px 0px 8px 4px #67aef6;
	-webkit-box-shadow:inset 0px 0px 8px 4px #67aef6;
	box-shadow:inset 0px 0px 8px 4px #67aef6;
	-webkit-transition: all 300ms ease-out;
	-moz-transition: all 300ms ease-out;
	-o-transition: all 300ms ease-out;
	-ms-transition: all 300ms ease-out;
	transition: all 300ms ease-out;
}
#updatebutton:active {
	border:1px solid #4fa1f4;
	-moz-box-shadow:inset 0px 0px 8px 4px #67aef6;
	-webkit-box-shadow:inset 0px 0px 8px 4px #67aef6;
	box-shadow:inset 0px 0px 8px 4px #67aef6;
	position:relative;
	top:1px;
	left:1px;
}
#title {
	margin-top: 15px;
	margin-bottom: 20px;
	height: 35px;
	line-height: 35px;
	-webkit-border-top-left-radius: 5px;
	-webkit-border-top-right-radius: 5px;
	-webkit-border-bottom-left-radius: 0;
	-webkit-border-bottom-right-radius: 0;
	-moz-border-radius-topleft: 5px;
	-moz-border-radius-topright: 5px;
	-moz-border-radius-bottomleft: 0;
	-moz-border-radius-bottomright: 0;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	border: 1px solid #e9e9e9;
	border-bottom: 1px solid #DDDDDD;
	background: #e6e6e6;
	background: -moz-linear-gradient(top, #F3F3F3 0%, #EEEEEE 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#F3F3F3), color-stop(100%,#EEEEEE));
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#F3F3F3', endColorstr='#EEEEEE', GradientType=0 );
	color: #333333;
	clear: both;
}
#title a, a:hover {
	color: #333333;
}
#title span.left {
	font-size: 15px;
	padding-left: 10px;
	float: left;
	text-shadow: 0 1px 1px #FFFFFF;
}
#title span.right {
	font-size: 10px;
	font-weight: normal;
	padding-right: 10px;
	float: right;
}
.green {
	color: #6fa239;
	padding-left: 5px;
	padding-right: 5px;
}
.red {
	color: #cc0000;
	padding-left: 5px;
	padding-right: 5px;
}
</style>
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/webvirtmgr.php">
<INLINE>
<![CDATA[
<?php include '/usr/local/emhttp/plugins/webvirtmgr/webvirtmgr.css';?>
<?PHP
# -------------------------------------------------------------------------
## Load current config file and check if program is installed already
# -------------------------------------------------------------------------

#check if there is internet conneciton to page doesn't stall out
$connected = @fsockopen("www.google.com", 80, $errno, $errstr, 5);
if ($connected){
	$is_conn = "true";
	fclose($connected);
} else {
	$is_conn = "false";
}

# This will clean any ^M characters caused by windows from the config file before use
if (file_exists("/boot/config/plugins/webvirtmgr/webvirtmgr.cfg"))
	shell_exec("sed -i 's!\r!!g' '/boot/config/plugins/webvirtmgr/webvirtmgr.cfg'");

$webvirtmgr_cfg = parse_ini_file( "/boot/config/plugins/webvirtmgr/webvirtmgr.cfg" );
$webvirtmgr_installed = file_exists( $webvirtmgr_cfg["INSTALLDIR"] . "/manage.py" ) ? "yes" : "no";

# -------------------------------------------------------------------------
## Collect local variables from config files and verify data as best as possible
# -------------------------------------------------------------------------

# Service Status Variable
if (isset($webvirtmgr_cfg['SERVICE']) && ($webvirtmgr_cfg['SERVICE'] == "enable" || $webvirtmgr_cfg['SERVICE'] == "disable"))
	$webvirtmgr_service = $webvirtmgr_cfg['SERVICE'];
else
	$webvirtmgr_service = "disable";

# Install Directory Variable
if (isset($webvirtmgr_cfg['INSTALLDIR']))
	$webvirtmgr_installdir = $webvirtmgr_cfg['INSTALLDIR'];
else
	$webvirtmgr_installdir = "/usr/local/webvirtmgr";

# Port Number Variable
if (file_exists($webvirtmgr_configdir . "/config.ini") && shell_exec("grep -m 1 '^http_port =' " . $webvirtmgr_configdir . "/config.ini")) {
	$webvirtmgr_port = trim(shell_exec( "grep -m 1 '^http_port =' " . $webvirtmgr_configdir . "/config.ini | sed -n 's!http_port = \([0-9][0-9]*\)!\\1!p'" ));
	if (is_numeric($webvirtmgr_port)) {
		if ($webvirtmgr_port < 0 || $webvirtmgr_port > 65535)
			$webvirtmgr_port = "8000";
	} else {
		$webvirtmgr_port = "8000";
	}
} else if (isset($webvirtmgr_cfg['PORT']) && is_numeric($webvirtmgr_cfg['PORT'])) {
	$webvirtmgr_port = $webvirtmgr_cfg['PORT'];
	if ($webvirtmgr_port < 0 || $webvirtmgr_port > 65535)
		$webvirtmgr_port = "8000";
} else {
	$webvirtmgr_port = "8000";
}

# Run As User Variable
if (isset($webvirtmgr_cfg['RUNAS']))
	$webvirtmgr_runas = $webvirtmgr_cfg['RUNAS'];
else
	$webvirtmgr_runas = "nobody";

# Username Check Status Variable
if (isset($webvirtmgr_cfg['USERNAME']))
	$webvirtmgr_username = $webvirtmgr_cfg['USERNAME'];
else
	$webvirtmgr_username = "username";

# Password Check Status Variable
if (isset($webvirtmgr_cfg['PASSWORD']))
	$webvirtmgr_password = $webvirtmgr_cfg['PASSWORD'];
else
	$webvirtmgr_password = "password";

# -------------------------------------------------------------------------
## Check is program is installed and running to get extra information
# -------------------------------------------------------------------------
if ($webvirtmgr_installed=="yes") {
	$webvirtmgr_pids = shell_exec ("pgrep -f manage.py" );
	if ($webvirtmgr_pids == "")
		$webvirtmgr_running = "no";
	else
		$webvirtmgr_running = "yes";
	if ($webvirtmgr_running == "yes")
		$webvirtmgr_updatestatus = "Running";
	else
		$webvirtmgr_updatestatus = "Stopped";

	$webvirtmgr_storagesize = shell_exec ( "/etc/rc.d/rc.webvirtmgr storagesize" );
	$webvirtmgr_datacheck = shell_exec ( "/etc/rc.d/rc.webvirtmgr datacheck" );

	# Get current installed version of the program
	$webvirtmgr_curversion = trim(shell_exec( "/etc/rc.d/rc.webvirtmgr currentversion" ));
	if ($webvirtmgr_curversion == "")
		$webvirtmgr_curversion = "couldn't determine the WebVirtMgr version"; 
}

?>

<div style="width: 49%; float:left">
	<div id="title">
		<span class="left">Status:&#32;<img src='/plugins/webvirtmgr/device_status.png'>
			<?if ($webvirtmgr_installed=="yes"):?>
				<?if ($webvirtmgr_running=="yes"):?>
					<a href="http://<?=$var['NAME'];?>:<?=$webvirtmgr_port;?>" target="_blank">
						<span class="green"><b>RUNNING</b></span>
					</a>
					<span style="font-size:12px;"> with version: <b><?=$webvirtmgr_curversion?></b></span>
				<?else:?>
					<span class="red"><b>STOPPED</b></span>
				<?endif;?>
			<?else:?>
				<span class="red"><b>NOT INSTALLED</b></span>
			<?endif;?>  
		</span>
	</div>  
	<?if ($webvirtmgr_installed=="yes"):?>
		<?if ($webvirtmgr_running=="yes"):?>
			<div style="position:relative;float:left;width:50%;text-align:right; margin-bottom:24px">
				<form name="webvirtmgr_start_stop" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.webvirtmgr stop">
					<input type="submit" name="runCmd" value="Stop">
				</form>
			</div>
			<div style="position:relative;float:left;width:50%;margin-bottom:24px">
				<form name="webvirtmgr_restart" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.webvirtmgr restart">
					<input type="submit" name="runCmd" value="Restart">
				</form>
			</div>
		<?else:?>
			<div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">
				<form name="webvirtmgr_start" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.webvirtmgr buttonstart">
					<input type="submit" name="runCmd" value="Start">
				</form>
			</div>
		<?endif;?>
	<?else:?>
		<div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">
			<form name="webvirtmgr_install" method="POST" action="/update.htm" target="progressFrame">
				<input type="hidden" name="cmd" value="/etc/rc.d/rc.webvirtmgr install">          
				<input type="submit" name="runCmd" value="Install">
			</form>
		</div>
	<?endif;?>
	<div id="title">
		<span class="left">Information:&#32;<img src='/plugins/webvirtmgr/information.png'></span>
	</div>
	<? if ($webvirtmgr_installed=="yes"): ?>  
		<?=$webvirtmgr_storagesize?>
		<?=$webvirtmgr_datacheck?>
	<? endif; ?>
	<? if ($is_conn == "false"):?>
		<p style="color:red;margin-left:10px;"><b>No Internet Connection Detected</b></p>
	<? endif; ?>
</div>



<div style="width: 49%; float:right">
	<div id="title">
		<span class="left">Configuration:&#32;<img src='/plugins/webvirtmgr/new_config.png'></span>
	</div>
	<form name="webvirtmgr_settings" method="POST" action="/update.htm" target="progressFrame">
		<input type="hidden" name="cmd" value="/etc/rc.d/rc.webvirtmgr">
		<table class="settings">
			<tr>
				<td>Enable WebVirtMgr:</td>
				<td>
					<select name="arg1" size="1">
						<?=mk_option($webvirtmgr_service, "disable", "No");?>
						<?=mk_option($webvirtmgr_service, "enable", "Yes");?>
					</select>
				</td>
			</tr>
			<tr>
				<td>Install directory:</td>
				<td><input type="text" name="arg2" maxlength="60" value="<?=$webvirtmgr_installdir;?>"></td>
			</tr>
			<tr>
				<td>Port:</td>
				<td><input type="text" name="arg3" maxlength="40" value="<?=$webvirtmgr_port;?>"></td>
			</tr>
			<tr>
				<td>Run as user:</td>
				<td>
					<select name="runas" size="1" onChange="checkUSER(this.form);">
						<?=mk_option($webvirtmgr_runas, "nobody", "nobody");?>
						<?=mk_option($webvirtmgr_runas, "root", "root");?>
						<option value='other' <?=($webvirtmgr_runas != "root" && $webvirtmgr_runas != "nobody") ? "selected=yes":"";?>>other</option>
					</select>
					<input type="hidden" name="arg4" style="width:66%" maxlength="40" value="<?=$webvirtmgr_runas;?>">
				</td>
			</tr>
			<tr><td colspan="2"><div style="background-color:#FFFFFF;border:1px solid #000000;height:1px;width:100%;font-size:8px;"> </div></td></tr>
			<tr>
				<td>Username:</td>
				<td>
					<input type="text" name="arg5" value="<?=$webvirtmgr_username;?>">
				</td>
			</tr>
			<tr>
				<td>Password:</td>
				<td>
					<input type="password" name="arg6" value="<?=$webvirtmgr_password;?>">
				</td>
			</tr>
		</table>
		<div align="center">
			<input type="submit" name="runCmd" value="Apply" style="margin-bottom:8px" onClick="verifyDATA(this.form);">
			<button type="button" style="margin-bottom:35px" onClick="done();">Done</button>
		</div>
	</form>
	<br />
</div>

<script type="text/javascript">
function checkRUNNING(form)
{
	if ("<?=$webvirtmgr_running;?>" == "yes")
	{
		form.arg2.readOnly = true;
		form.arg3.readOnly = true;
		form.arg4.readOnly = true;
		form.arg5.readOnly = true;
		form.arg6.readOnly = true;
		form.runas.disabled = true;
   } 
   else
   {
		form.arg2.readOnly = (form.arg1.value == "enable");
		form.arg3.readOnly = (form.arg1.value == "enable");
		form.arg4.readOnly = (form.arg1.value == "enable");
		form.arg5.readOnly = (form.arg1.value == "enable");
		form.arg6.readOnly = (form.arg1.value == "enable");
		form.runas.disabled = (form.arg1.value == "enable");
   }
}
 
function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 ) {
		form.arg4.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg4.type = "hidden";
	} else {
		form.arg4.value = "<?=$webvirtmgr_runas;?>";
		form.arg4.type = "text";
	}
}


function verifyDATA(form)
{
	if (form.arg2.value == null || !(/\S/.test(form.arg2.value))){
		form.arg2.value = "/usr/local/webvirtmgr";
	}
	if (isNumber(form.arg3.value)){
		if (form.arg3.value < 0 || form.arg3.value > 65535){
			form.arg3.value = "8000";
		}
	} else {
		form.arg3.value = "8000";
	}
	if (form.arg4.value == ""){
		form.arg4.value = "nobody";
	}
	if (form.arg5.value == ""){
		form.arg5.value = "username";
	}
	if (form.arg6.value == ""){
		form.arg6.value = "password";
	}

	form.arg1.value = form.arg1.value.replace(/ /g,"_");
	form.arg2.value = form.arg2.value.replace(/ /g,"_");
	form.arg3.value = form.arg3.value.replace(/ /g,"_");
	form.arg4.value = form.arg4.value.replace(/ /g,"_");
	form.arg5.value = form.arg5.value.replace(/ /g,"_");
	form.arg6.value = form.arg6.value.replace(/ /g,"_");
}

function isNumber(n) {
	return !isNaN(parseFloat(n)) && isFinite(n);
}

checkUSER(document.webvirtmgr_settings);
</script>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/&name;/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
source /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
if [ "$SERVICE" = "enable" ]; then
	/etc/rc.d/rc.webvirtmgr start
fi
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/&name;/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.webvirtmgr stop
]]>
</INLINE>
</FILE>

<!--
create plugin README.md file
-->
<FILE Name="/usr/local/emhttp/plugins/&name;/README.md">
<INLINE>
**Web Virtual Manager support**

WebVirtMgr is a libvirt-based Web interface for managing virtual machines. It allows you to create and configure new domains, and adjust a domain's resource allocation. A VNC viewer over a SSH tunnel presents a full graphical console to the guest domain. KVM is currently the only hypervisor supported
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
rm -r /usr/local/emhttp/plugins/&name;
rm -r /boot/config/plugins/&name;
rm -f /etc/rc.d/rc.webvirtmgr
</INLINE>
</FILE>

<!--
Install script.
-->
<FILE Name="/tmp/webvirtmgr-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/webvirtmgr/webvirtmgr.cfg
sudo pip install -q -r /boot/config/plugins/webvirtmgr/requirements.txt
rm /tmp/webvirtmgr-install
]]>
</INLINE>
</FILE>

</PLUGIN>

